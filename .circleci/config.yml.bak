version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/spring-akka-extension # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: spring-akka-extension -{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: spring-akka-extension -{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests


#      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
#          path: target/surefire-reports

#      - store_artifacts: # store the uberjar as an artifact
#          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
        name: Install dependencies
        command: |
          apk add --no-cache \
            py-pip=9.0.0-r1 \
            openssl \
            nodejs
      - run:
          name: Setup JFrog
          command: |
            npm install -g jfrog-cli-go
            jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_PASSWORD
            jfrog rt u "multi*/*.jar" <artifactory_repo_name> --build-name=<name_you_give_to_build> --build-number=$CIRCLE_BUILD_NUM --flat=false
#            jfrog rt u "multi*/*.war" <artifactory_repo_name> --build-name=<name_you_give_to_build> --build-number=$CIRCLE_BUILD_NUM --flat=false
            jfrog rt bce <name_you_give_to_build> $CIRCLE_BUILD_NUM
            jfrog rt bp <name_you_give_to_build> $CIRCLE_BUILD_NUM